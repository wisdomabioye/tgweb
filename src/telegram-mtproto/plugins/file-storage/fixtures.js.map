{"version":3,"sources":["../../../src/plugins/file-storage/fixtures.js"],"names":["access","writeFile","readFile","W_OK","fs","require","constants","checkAccess","filepath","rs","rj","err","writeData","data","readData","toString","createFile"],"mappings":";;;;;;;AAEA;;;;AACA;;;;;;AAEA,IAAIA,eAAJ;AAAA,IACIC,kBADJ;AAAA,IAEIC,iBAFJ;AAAA,IAGIC,aAHJ;;AAKA,0BAAY;AACV,MAAMC,KAAKC,QAAQ,IAAR,CAAX;AACAL,WAASI,GAAGJ,MAAZ;AACAC,cAAYG,GAAGH,SAAf;AACAC,aAAWE,GAAGF,QAAd;AACAC,SAAOC,GAAGE,SAAH,CAAaH,IAApB;AACD;;AAEM,IAAMI,oCACVC,QAAD,IACE,uBAAY,CAACC,EAAD,EAAKC,EAAL,KACVV,OAAOQ,QAAP,EACOL,IADP,EAEQQ,GAAD,IAASA,OAAO,IAAP,GACNF,IADM,GAENC,GAAGC,GAAH,CAJV,CADF,CAFG;;AASA,IAAMC,gCACX,CAACJ,QAAD,EAAmBK,IAAnB,KACE,uBAAY,CAACJ,EAAD,EAAKC,EAAL,KACVT,UAAUO,QAAV,EACUK,IADV,EAEWF,GAAD,IAASA,OAAO,IAAP,GACLF,IADK,GAELC,GAAGC,GAAH,CAJd,CADF,CAFG;;AASA,IAAMG,8BACVN,QAAD,IACE,uBAAY,CAACC,EAAD,EAAKC,EAAL,KACVR,SAASM,QAAT,EACS,CAACG,GAAD,EAAME,IAAN,KAAuBF,OAAO,IAAP,GACnBF,GAAGI,KAAKE,QAAL,EAAH,CADmB,GAEnBL,GAAGC,GAAH,CAHb,CADF,CAFG;;AAQA,IAAMK,kCAAcR,QAAD,IACxBI,UAAUJ,QAAV,EAAoB,IAApB,CADK","file":"fixtures.js","sourcesContent":["//@flow\n\nimport Promise from 'bluebird'\nimport isNode from 'detect-node'\n\nlet access,\n    writeFile,\n    readFile,\n    W_OK\n\nif (isNode) {\n  const fs = require('fs')\n  access = fs.access\n  writeFile = fs.writeFile\n  readFile = fs.readFile\n  W_OK = fs.constants.W_OK\n}\n\nexport const checkAccess =\n  (filepath: string) =>\n    new Promise((rs, rj) =>\n      access(filepath,\n             W_OK,\n             (err) => err == null\n              ? rs()\n              : rj(err)))\n\nexport const writeData =\n  (filepath: string, data: string) =>\n    new Promise((rs, rj) =>\n      writeFile(filepath,\n                data,\n                (err) => err == null\n                  ? rs()\n                  : rj(err)))\n\nexport const readData =\n  (filepath: string) =>\n    new Promise((rs, rj) =>\n      readFile(filepath,\n               (err, data: Buffer) => err == null\n                 ? rs(data.toString())\n                 : rj(err)))\n\nexport const createFile = (filepath: string) =>\n  writeData(filepath, '{}')"]}