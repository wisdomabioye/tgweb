{"version":3,"sources":["../../src/util/defer.js"],"names":["blueDefer","resolve","reject","promise","rs","rj"],"mappings":";;;;;;;AAAA;;;;;;AACA;;;;;AAKO,IAAMA,gCAAY,MAAM;AAC7B,MAAIC,gBAAJ;AAAA,MAAaC,eAAb;AACA,MAAMC,UAAU,uBAAY,CAACC,EAAD,EAAKC,EAAL,KAAY;AACtCJ,cAAUG,EAAV;AACAF,aAASG,EAAT;AACD,GAHe,CAAhB;AAIA,SAAO;AACLJ,WADK;AAELC,UAFK;AAGLC;AAHK,GAAP;AAKD,CAXM;;kBAaQH,S","file":"defer.js","sourcesContent":["import Promise from 'bluebird'\n/**\n * Defered promise like in Q and $q\n *\n * @returns {{ resolve: (res: any) => void, reject: (res: any) => void, promise: Promise<{}> }}\n */\nexport const blueDefer = () => {\n  let resolve, reject\n  const promise = new Promise((rs, rj) => {\n    resolve = rs\n    reject = rj\n  })\n  return {\n    resolve,\n    reject,\n    promise\n  }\n}\n\nexport default blueDefer"]}