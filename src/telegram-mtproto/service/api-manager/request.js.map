{"version":3,"sources":["../../../src/service/api-manager/request.js"],"names":["Request","constructor","config","method","params","initNetworker","networker","getNetworker","netOpts","dc","performRequest","then","requestWith","wrapApiCall","catch","code","error303","error420","bind","err","matched","type","match","length","reject","newDcID","waitTime","console","error"],"mappings":";;;;;;AAEA;;;;AAKA;;AACA;;;;;;AAJA;AACA;;AAQA,MAAMA,OAAN,CAAc;AAIZC,cAAYC,MAAZ,EACYC,MADZ,EAEYC,SAAkB,EAF9B,EAEkC;AAAA;;AAAA,SAYlCC,aAZkC,qBAYlB,aAAoC;AAClD,UAAI,CAAC,MAAKH,MAAL,CAAYI,SAAjB,EAA4B;AAC1B,YAAM,EAAEC,YAAF,EAAgBC,OAAhB,EAAyBC,EAAzB,KAAgC,MAAKP,MAA3C;AACA,YAAMI,YAAY,MAAMC,aAAaE,EAAb,EAAiBD,OAAjB,CAAxB;AACA,cAAKN,MAAL,CAAYI,SAAZ,GAAwBA,SAAxB;AACD;AACD,aAAO,MAAKJ,MAAL,CAAYI,SAAnB;AACD,KAnBiC;;AAAA,SAqBlCI,cArBkC,GAqBjB,MAAM,KAAKL,aAAL,GAAqBM,IAArB,CAA0B,KAAKC,WAA/B,CArBW;;AAAA,SAsBlCA,WAtBkC,GAsBnBN,SAAD,IAA8BA,UACzCO,WADyC,CAC7B,KAAKV,MADwB,EAChB,KAAKC,MADW,EACH,KAAKF,MAAL,CAAYM,OADT,EAEzCM,KAFyC,CAEnC,EAAEC,MAAM,GAAR,EAFmC,EAEpB,KAAKC,QAFe,EAGzCF,KAHyC,CAGnC,EAAEC,MAAM,GAAR,EAHmC,EAGpB,KAAKE,QAHe,CAtBV;;AAChC,SAAKf,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;;AAEA,SAAKM,cAAL,GAAsB,KAAKA,cAAL,CAAoBQ,IAApB,CAAyB,IAAzB,CAAtB;AACA;AACA,SAAKF,QAAL,GAAgB,KAAKA,QAAL,CAAcE,IAAd,CAAmB,IAAnB,CAAhB;AACA;AACA,SAAKD,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKb,aAAL,GAAqB,KAAKA,aAAL,CAAmBa,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAeDF,WAASG,GAAT,EAAuB;AACrB,QAAMC,UAAUD,IAAIE,IAAJ,CAASC,KAAT,CAAe,uDAAf,CAAhB;AACA,QAAI,CAACF,OAAD,IAAYA,QAAQG,MAAR,GAAiB,CAAjC,EAAoC,OAAO,mBAASC,MAAT,CAAgBL,GAAhB,CAAP;AACpC,QAAM,IAAMM,OAAN,IAAiBL,OAAvB;AACA,QAAI,CAACK,OAAD,KAAa,KAAKvB,MAAL,CAAYO,EAA7B,EAAiC,OAAO,mBAASe,MAAT,CAAgBL,GAAhB,CAAP;AACjC,SAAKjB,MAAL,CAAYO,EAAZ,GAAiB,CAACgB,OAAlB;AACA,WAAO,KAAKvB,MAAL,CAAYI,SAAnB;AACA;;;;AAIA;AACA;AACA,WAAO,KAAKI,cAAL,EAAP;AACD;AACDO,WAASE,GAAT,EAAuB;AACrB,QAAMC,UAAUD,IAAIE,IAAJ,CAASC,KAAT,CAAe,mBAAf,CAAhB;AACA,QAAI,CAACF,OAAD,IAAYA,QAAQG,MAAR,GAAiB,CAAjC,EAAoC,OAAO,mBAASC,MAAT,CAAgBL,GAAhB,CAAP;AACpC,QAAM,GAAIO,QAAJ,IAAiBN,OAAvB;AACAO,YAAQC,KAAR,CAAe,yDAAwDF,QAAS,UAAhF;AACA,WAAO,CAACA,QAAD,GAAY,EAAZ,GACH,mBAASF,MAAT,CAAgBL,GAAhB,CADG,GAEH,+BAAY,KAAKT,cAAjB,EAAiC,CAACgB,QAAD,GAAY,GAA7C,CAFJ;AAGD;AAvDW;;kBA0DC1B,O","file":"request.js","sourcesContent":["//@flow\n\nimport Bluebird from 'bluebird'\n\n// import Logger from '../../util/log'\n// const log = Logger`request`\n\nimport { MTError } from '../../error'\nimport { delayedCall } from '../../util/smart-timeout'\nimport type { NetworkerType, RequestOptions } from './index.h'\n\n\n\nclass Request {\n  method: string\n  params: { [arg: string]: * }\n  config: RequestOptions\n  constructor(config: RequestOptions,\n              method: string,\n              params?: Object = {}) {\n    this.config = config\n    this.method = method\n    this.params = params\n\n    this.performRequest = this.performRequest.bind(this)\n    //$FlowIssue\n    this.error303 = this.error303.bind(this)\n    //$FlowIssue\n    this.error420 = this.error420.bind(this)\n    this.initNetworker = this.initNetworker.bind(this)\n  }\n  initNetworker = async (): Promise<NetworkerType> => {\n    if (!this.config.networker) {\n      const { getNetworker, netOpts, dc } = this.config\n      const networker = await getNetworker(dc, netOpts)\n      this.config.networker = networker\n    }\n    return this.config.networker\n  }\n\n  performRequest = () => this.initNetworker().then(this.requestWith)\n  requestWith = (networker: NetworkerType) => networker\n    .wrapApiCall(this.method, this.params, this.config.netOpts)\n    .catch({ code: 303 }, this.error303)\n    .catch({ code: 420 }, this.error420)\n  error303(err: MTError) {\n    const matched = err.type.match(/^(PHONE_MIGRATE_|NETWORK_MIGRATE_|USER_MIGRATE_)(\\d+)/)\n    if (!matched || matched.length < 2) return Bluebird.reject(err)\n    const [ , , newDcID] = matched\n    if (+newDcID === this.config.dc) return Bluebird.reject(err)\n    this.config.dc = +newDcID\n    delete this.config.networker\n    /*if (this.config.dc)\n      this.config.dc = newDcID\n    else\n      await this.config.storage.set('dc', newDcID)*/\n    //TODO There is disabled ability to change default DC\n    //NOTE Shouldn't we must reassign current networker/cachedNetworker?\n    return this.performRequest()\n  }\n  error420(err: MTError) {\n    const matched = err.type.match(/^FLOOD_WAIT_(\\d+)/)\n    if (!matched || matched.length < 2) return Bluebird.reject(err)\n    const [ , waitTime ] = matched\n    console.error(`Flood error! It means that mtproto server bans you on ${waitTime} seconds`)\n    return +waitTime > 60\n      ? Bluebird.reject(err)\n      : delayedCall(this.performRequest, +waitTime * 1e3)\n  }\n}\n\nexport default Request\n"]}