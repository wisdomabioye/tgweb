{"version":3,"sources":["../../../src/service/main/wrap.js"],"names":["MTProto","config","mtproto","api","telegram","method","params","options","mtpInvokeApi","setUserAuth","on","emit","storage"],"mappings":";;;;;;AAEA;;;;;;AAKA,SAASA,OAAT,CAAiBC,SAAqB,EAAtC,EAA8D;AAC5D,MAAMC,UAAU,oBAASD,MAAT,CAAhB;;AAEA,MAAME,MAAMD,QAAQC,GAApB;;AAEA,WAASC,QAAT,CAAkBC,MAAlB,EACkBC,MADlB,EAEkBC,UAAuB,EAFzC,EAE6C;AAC3C,WAAOJ,IAAIK,YAAJ,CAAiBH,MAAjB,EAAyBC,MAAzB,EAAiCC,OAAjC,CAAP;AACD;;AAEDH,WAASK,WAAT,GAAuBN,IAAIM,WAA3B;AACAL,WAASM,EAAT,GAAcP,IAAIO,EAAlB;AACAN,WAASO,IAAT,GAAgBR,IAAIQ,IAApB;AACAP,WAASQ,OAAT,GAAmBT,IAAIS,OAAvB;;AAEA,SAAOR,QAAP;AACD;;kBAEcJ,O","file":"wrap.js","sourcesContent":["//@flow\n\nimport Main from './index'\n\nimport type { ConfigType } from './index.h'\nimport type { ApiManagerInstance, LeftOptions } from '../api-manager/index.h'\n\nfunction MTProto(config: ConfigType = {}): ApiManagerInstance {\n  const mtproto = new Main(config)\n\n  const api = mtproto.api\n\n  function telegram(method: string,\n                    params: Object,\n                    options: LeftOptions = {}) {\n    return api.mtpInvokeApi(method, params, options)\n  }\n\n  telegram.setUserAuth = api.setUserAuth\n  telegram.on = api.on\n  telegram.emit = api.emit\n  telegram.storage = api.storage\n\n  return telegram\n}\n\nexport default MTProto"]}