{"version":3,"sources":["../../../src/service/main/index.js"],"names":["api57","require","mtproto57","apiConfig","invokeWithLayer","layer","initConnection","api_id","device_model","system_version","app_version","lang_code","MTProto","constructor","config","emitter","wildcard","on","bind","emit","configNormalization","tls","schema","mtSchema","netFabric","api","app","storage","server","publicKeys","publisKeysHex","apiNormalized","invokeLayer","fullCfg","modulus","exponent"],"mappings":";;;;;;AAEA;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAIA;;AAEA,IAAMA,QAAQC,QAAQ,6BAAR,CAAd;;AACA,IAAMC,YAAYD,QAAQ,iCAAR,CAAlB;;AAEA,IAAME,YAAuB;AAC3BC,mBAAiB,UADU;AAE3BC,SAAiB,EAFU;AAG3BC,kBAAiB,UAHU;AAI3BC,UAAiB,KAJU;AAK3BC,gBAAiB,mBALU;AAM3BC,kBAAiB,kBANU;AAO3BC,eAAiB,OAPU;AAQ3BC,aAAiB;AARU,CAA7B;;AAWA,MAAMC,OAAN,CAAc;AASZC,cAAYC,MAAZ,EAAgC;AAAA,SANhCC,OAMgC,GANtB,2BAAiB;AACzBC,gBAAU;AADe,KAAjB,CAMsB;AAAA,SAFhCC,EAEgC,GAFvB,KAAKF,OAAL,CAAaE,EAAb,CAAgBC,IAAhB,CAAqB,KAAKH,OAA1B,CAEuB;AAAA,SADhCI,IACgC,GADnB,KAAKJ,OAAL,CAAaI,IAAb,CAAkBD,IAAlB,CAAuB,KAAKH,OAA5B,CACmB;;AAC9B,SAAKD,MAAL,GAAcM,oBAAoBN,MAApB,CAAd;AACA,SAAKO,GAAL,GAAW,kBAAG,KAAKP,MAAL,CAAYQ,MAAf,EAAuB,KAAKR,MAAL,CAAYS,QAAnC,CAAX;AACA,QAAMC,YAAY,yBAAgB,KAAKV,MAAL,CAAYW,GAA5B,EAAiC,KAAKJ,GAAtC,EAA2C,KAAKP,MAAL,CAAYY,GAAZ,CAAgBC,OAA3D,EAAoE,KAAKR,IAAzE,CAAlB;AACA,SAAKM,GAAL,GAAW,2BAAe,KAAKX,MAApB,EAA4B,KAAKO,GAAjC,EAAsCG,SAAtC,EAAiD,EAAEP,IAAI,KAAKA,EAAX,EAAeE,MAAM,KAAKA,IAA1B,EAAjD,CAAX;AACD;AAdW;;kBAiBCP,O;;;AAEf,IAAMQ,sBAAuBN,MAAD,IAAsC;AAChE,MAAM;AACJc,aAAS,EADL;AAEJH,UAAM,EAFF;AAGJC,SAAK;AACHC,gBAAU,6BADP;AAEHE,mBAAaC;AAFV,QAGD,EANA;AAOJR,aAAStB,KAPL;AAQJuB,eAAWrB;AARP,MASFY,MATJ;AAUA,MAAMiB,kCAAqB5B,SAArB,EAAmCsB,GAAnC,CAAN;AACA,MAAMO,cAAc,oCAAoBD,cAAc1B,KAAlC,CAApB;AACA0B,gBAAc3B,eAAd,GAAgC4B,WAAhC;AACA,MAAMC,UAAU;AACdL,UADc;AAEdH,SAAKM,aAFS;AAGdL,SAAK,EAAEC,OAAF,EAAWE,UAAX,EAHS;AAIdP,UAJc;AAKdC;AALc,GAAhB;AAOA,kCAAgBU,OAAhB;AACA,SAAOA,OAAP;AACD,CAvBD;;AAyBA;;;;;;;;;;;;;AAaA,IAAMH,gBAA6B,CAAC;AAClCI,WACA,uEACA,oEADA,GAEA,oEAFA,GAGA,oEAHA,GAIA,oEAJA,GAKA,oEALA,GAMA,oEANA,GAOA,oDATkC;AAUlCC,YAAU;AAVwB,CAAD,CAAnC","file":"index.js","sourcesContent":["//@flow\n\nimport EventEmitter from 'eventemitter2'\n\nimport { ApiManager } from '../api-manager'\nimport NetworkerFabric from '../networker'\nimport MemoryStorage from '../../plugins/memory-storage'\nimport TL from '../../tl'\n\nimport configValidator from './config-validation'\nimport generateInvokeLayer from './invoke-layer-generator'\n\nimport type { TLFabric } from '../../tl'\nimport type { ApiConfig, ConfigType, StrictConfig, Emit, On, PublicKey } from './index.h'\n// import type { ApiManagerInstance } from '../api-manager/index.h'\n\nconst api57 = require('../../../schema/api-57.json')\nconst mtproto57 = require('../../../schema/mtproto-57.json')\n\nconst apiConfig: ApiConfig = {\n  invokeWithLayer: 0xda9b0d0d,\n  layer          : 57,\n  initConnection : 0x69796de9,\n  api_id         : 49631,\n  device_model   : 'Unknown UserAgent',\n  system_version : 'Unknown Platform',\n  app_version    : '1.0.1',\n  lang_code      : 'en'\n}\n\nclass MTProto {\n  config: StrictConfig\n  tls: TLFabric\n  emitter = new EventEmitter({\n    wildcard: true\n  })\n  api: ApiManager\n  on: On = this.emitter.on.bind(this.emitter)\n  emit: Emit = this.emitter.emit.bind(this.emitter)\n  constructor(config: ConfigType) {\n    this.config = configNormalization(config)\n    this.tls = TL(this.config.schema, this.config.mtSchema)\n    const netFabric = NetworkerFabric(this.config.api, this.tls, this.config.app.storage, this.emit)\n    this.api = new ApiManager(this.config, this.tls, netFabric, { on: this.on, emit: this.emit })\n  }\n}\n\nexport default MTProto\n\nconst configNormalization = (config: ConfigType): StrictConfig => {\n  const {\n    server = {},\n    api = {},\n    app: {\n      storage = new MemoryStorage,\n      publicKeys = publisKeysHex\n    } = {},\n    schema = api57,\n    mtSchema = mtproto57,\n  } = config\n  const apiNormalized = { ...apiConfig, ...api }\n  const invokeLayer = generateInvokeLayer(apiNormalized.layer)\n  apiNormalized.invokeWithLayer = invokeLayer\n  const fullCfg = {\n    server,\n    api: apiNormalized,\n    app: { storage, publicKeys },\n    schema,\n    mtSchema\n  }\n  configValidator(fullCfg)\n  return fullCfg\n}\n\n/**\n*  Server public key, obtained from here: https://core.telegram.org/api/obtaining_api_id\n*\n* -----BEGIN RSA PUBLIC KEY-----\n* MIIBCgKCAQEAwVACPi9w23mF3tBkdZz+zwrzKOaaQdr01vAbU4E1pvkfj4sqDsm6\n* lyDONS789sVoD/xCS9Y0hkkC3gtL1tSfTlgCMOOul9lcixlEKzwKENj1Yz/s7daS\n* an9tqw3bfUV/nqgbhGX81v/+7RFAEd+RwFnK7a+XYl9sluzHRyVVaTTveB2GazTw\n* Efzk2DWgkBluml8OREmvfraX3bkHZJTKX4EQSjBbbdJ2ZXIsRrYOXfaA+xayEGB+\n* 8hdlLmAjbCVfaigxX0CDqWeR1yFL9kwd9P0NsZRPsmoqVwMbMu7mStFai6aIhc3n\n* Slv8kg9qv1m6XHVQY3PnEw+QQtqSIXklHwIDAQAB\n* -----END RSA PUBLIC KEY-----\n*/\n\nconst publisKeysHex: PublicKey[] = [{\n  modulus:\n  'c150023e2f70db7985ded064759cfecf0af328e69a41daf4d6f01b538135a6f91f' +\n  '8f8b2a0ec9ba9720ce352efcf6c5680ffc424bd634864902de0b4bd6d49f4e5802' +\n  '30e3ae97d95c8b19442b3c0a10d8f5633fecedd6926a7f6dab0ddb7d457f9ea81b' +\n  '8465fcd6fffeed114011df91c059caedaf97625f6c96ecc74725556934ef781d86' +\n  '6b34f011fce4d835a090196e9a5f0e4449af7eb697ddb9076494ca5f81104a305b' +\n  '6dd27665722c46b60e5df680fb16b210607ef217652e60236c255f6a28315f4083' +\n  'a96791d7214bf64c1df4fd0db1944fb26a2a57031b32eee64ad15a8ba68885cde7' +\n  '4a5bfc920f6abf59ba5c75506373e7130f9042da922179251f',\n  exponent: '010001'\n}]"]}